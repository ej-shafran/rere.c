* rere.c (*Re*cord *Re*play)

  Based off of [[https://github.com/tsoding/rere.py][Tsoding's rere project]] -
  see [[https://www.youtube.com/watch?v=32a52fOBDQY][YouTube video]].

  This project contains two files: =src/bi.h= which includes the logic for the
  BI encoding format, and =src/rere.c= which uses that format in a similar way
  to =rere.py=.

  *NOTE:* this is a toy project meant for me to practice programming skills,
  and because I thought the idea of implementing BI in C sounded fun and cool
  (it was!). Don't take it seriously please.

** Quick Start

   1. Build the project:

      #+begin_src bash
      make
      #+end_src

   2. Create a file with a shell command line per line. Let's call it
      [[./test.list][test.list]].

   3. Record the expected behavior of each shell command:

      #+begin_src bash
      ./build/rere record test.list
      #+end_src

      The above command should create [[./test.list.bi][test.list.bi]] snapshot
      file with stdout and returncode captured as the expected behavior. The
      file uses =bi= format, for more info see [[#snapshot-schema][Snapshot
      Schema]].

   4. Replay the command lines checking their behavior against the recorded one:

      #+begin_src bash
      ./build/rere replay test.list
      #+end_src


** Snapshot Schema
#+CUSTOM_ID: snapshot-schema

   The snapshot file uses [[https://github.com/tsoding/bi-format][bi format]]. Its schema goes as following (the order of fields matters):

   1. First comes an integer field =count= which denotes the amount of tests.

   2. Then come the tests. Each test is a sequence of fields: 

      - Blob field shell which contains the shell command to test,
      - Integer field returncode which contains the expected exit code of the shell command,
      - Blob field stdout which contains the bytes of the expected standard output,

      # TODO: - Blob field stderr which contains the bytes of the expected standard error output.

See [[./test.list.bi][test.list.bi]] for an example.

** TODOs

*** TODO Add =stderr= into output
